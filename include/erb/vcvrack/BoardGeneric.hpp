/*****************************************************************************

      BoardGeneric.hpp
      Copyright (c) 2020 Raphael DINGE

*Tab=3***********************************************************************/



#pragma once



/*\\\ INCLUDE FILES \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/



namespace erb
{



/*\\\ PUBLIC \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/

/*
==============================================================================
Name : bind_process
==============================================================================
*/

template <typename F>
void  BoardGeneric::bind_process (F && f)
{
   init ();

   _buffer_callback = std::forward <F> (f);
}



/*
==============================================================================
Name : setup_hw_representation
==============================================================================
*/

template <typename T, typename U>
void  BoardGeneric::setup_hw_representation (T & hw, size_t hw_row, U & vcv, size_t vcv_row)
{
   for (size_t i = 0 ; i < hw.size (hw_row) ; ++i)
   {
      auto & val = hw (hw_row, i);
      auto index = vcv.global_index (vcv_row, i);

      _to_vcv_index [&val] = index;
   }
}



/*\\\ INTERNAL \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/



/*\\\ PROTECTED \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/



/*\\\ PRIVATE \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/



}  // namespace erb



/*\\\ EOF \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/
