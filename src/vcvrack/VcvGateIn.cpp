/*****************************************************************************

      VcvGateIn.cpp
      Copyright (c) 2020 Raphael DINGE

*Tab=3***********************************************************************/



/*\\\ INCLUDE FILES \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/

#include "erb/vcvrack/VcvGateIn.h"

#include "erb/vcvrack/VcvModule.h"



namespace erb
{



/*\\\ PUBLIC \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/

/*
==============================================================================
Name : ctor
==============================================================================
*/

VcvGateIn::VcvGateIn (VcvModule & module, const VcvPin & /* pin */, Mode mode)
:  VcvInputBase (module)
,  _mode (mode)
{
}



/*
==============================================================================
Name : set_mode
==============================================================================
*/

void  VcvGateIn::set_mode (Mode mode)
{
   _mode = mode;
}



/*
==============================================================================
Name : operator bool
==============================================================================
*/

VcvGateIn::operator bool () const
{
   switch (_mode)
   {
   case Mode::Trigger:
      return _current && !_previous;

   case Mode::Gate:
      return _current;

#if defined (__GNUC__) && ! defined (__clang__)
   default:
      return false;
#endif
   }
}



/*\\\ INTERNAL \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/

/*
==============================================================================
Name : ctor
==============================================================================
*/

/*VcvGateIn::VcvGateIn (const VcvPin & pin, Mode mode)
:  _mode (mode)
{
}*/



/*
==============================================================================
Name : impl_notify_audio_buffer_start
==============================================================================
*/

void  VcvGateIn::impl_notify_audio_buffer_start ()
{
   VcvInputBase::impl_notify_audio_buffer_start ();

   _previous = _current;

   _current = norm_val () > 0.5f;
}



/*\\\ PROTECTED \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/



/*\\\ PRIVATE \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/



}  // namespace erb



/*\\\ EOF \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/
