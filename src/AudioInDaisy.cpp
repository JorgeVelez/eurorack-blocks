/*****************************************************************************

      AudioInDaisy.cpp
      Copyright (c) 2020 Raphael DINGE

*Tab=3***********************************************************************/



/*\\\ INCLUDE FILES \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/

#include "erb/AudioInDaisy.h"

#include "erb/Module.h"

#include "per/gpio.h"



namespace erb
{



/*\\\ PUBLIC \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/

/*
==============================================================================
Name : ctor
==============================================================================
*/

AudioInDaisy::AudioInDaisy (Module & module, AudioInDaisyPin pin)
:  _module (module)
,  _channel (pin.pin)
{
   module.add (*this);
}



/*
==============================================================================
Name : size
==============================================================================
*/

AudioInDaisy::operator Buffer () const
{
   return _buffer;
}



/*
==============================================================================
Name : size
==============================================================================
*/

size_t   AudioInDaisy::size () const
{
   return _buffer.size ();
}



/*
==============================================================================
Name : operator []
==============================================================================
*/

const float &  AudioInDaisy::operator [] (size_t index)
{
   return _buffer [index];
}



/*\\\ INTERNAL \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/

/*
==============================================================================
Name : impl_notify_audio_buffer_start
==============================================================================
*/

void  AudioInDaisy::impl_notify_audio_buffer_start ()
{
   const auto & buffer = _module.impl_onboard_codec_buffer_input ();

   _buffer = buffer [_channel];
}



/*\\\ PROTECTED \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/



/*\\\ PRIVATE \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/



}  // namespace erb



/*\\\ EOF \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/
